// <auto-generated />
using System;
using CRUDAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CRUDAPI.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250627140711_TornarCpfOpcional")]
    partial class TornarCpfOpcional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CRUDAPI.Models.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompeticaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorInscricao")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CompeticaoId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CRUDAPI.Models.Chaveamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ArvoreConfrontos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Chaveamentos");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BannerImagem")
                        .HasColumnType("text");

                    b.Property<string>("ChavePix")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<long>("CriadorUsuarioId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Modalidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CriadorUsuarioId");

                    b.ToTable("Competicoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competidor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CriadorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CriadorId");

                    b.ToTable("Competidores");
                });

            modelBuilder.Entity("CRUDAPI.Models.Confronto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ChaveamentoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChaveamentoId");

                    b.ToTable("Confrontos");
                });

            modelBuilder.Entity("CRUDAPI.Models.ConfrontoInscricao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ConfrontoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfrontoInscricaoPaiId")
                        .HasColumnType("bigint");

                    b.Property<long>("InscricaoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ConfrontoId");

                    b.HasIndex("ConfrontoInscricaoPaiId");

                    b.HasIndex("InscricaoId");

                    b.ToTable("ConfrontoInscricao");
                });

            modelBuilder.Entity("CRUDAPI.Models.Inscricao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompetidorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompetidorId1")
                        .HasColumnType("bigint");

                    b.Property<long?>("PagamentoId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Posição")
                        .HasColumnType("integer");

                    b.Property<long?>("PremioResgatavelId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("WO")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompetidorId");

                    b.HasIndex("CompetidorId1");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("PremioResgatavelId");

                    b.ToTable("Inscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Notificacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DataExpiracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("NotificadoId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoAnuncio")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NotificadoId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Premio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("PagamentoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PagamentoId");

                    b.ToTable("Premios");
                });

            modelBuilder.Entity("CRUDAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SenhaValidada")
                        .HasColumnType("boolean");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokenConfirmacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Pagamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("FavorecidoId")
                        .HasColumnType("bigint");

                    b.Property<string>("InfoPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PagadorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Txid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("CRUDAPI.Models.Categoria", b =>
                {
                    b.HasOne("CRUDAPI.Models.Competicao", "Competicao")
                        .WithMany("Categorias")
                        .HasForeignKey("CompeticaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Competicao");
                });

            modelBuilder.Entity("CRUDAPI.Models.Chaveamento", b =>
                {
                    b.HasOne("CRUDAPI.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competicao", b =>
                {
                    b.HasOne("CRUDAPI.Models.Usuario", "CriadorUsuario")
                        .WithMany()
                        .HasForeignKey("CriadorUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CriadorUsuario");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competidor", b =>
                {
                    b.HasOne("CRUDAPI.Models.Usuario", "Criador")
                        .WithMany("Competidores")
                        .HasForeignKey("CriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criador");
                });

            modelBuilder.Entity("CRUDAPI.Models.Confronto", b =>
                {
                    b.HasOne("CRUDAPI.Models.Chaveamento", "Chaveamento")
                        .WithMany()
                        .HasForeignKey("ChaveamentoId");

                    b.Navigation("Chaveamento");
                });

            modelBuilder.Entity("CRUDAPI.Models.ConfrontoInscricao", b =>
                {
                    b.HasOne("CRUDAPI.Models.Confronto", "Confronto")
                        .WithMany("ConfrontoInscricoes")
                        .HasForeignKey("ConfrontoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.ConfrontoInscricao", "ConfrontoInscricaoPai")
                        .WithMany()
                        .HasForeignKey("ConfrontoInscricaoPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRUDAPI.Models.Inscricao", "Inscricao")
                        .WithMany("ConfrontoInscricoes")
                        .HasForeignKey("InscricaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Confronto");

                    b.Navigation("ConfrontoInscricaoPai");

                    b.Navigation("Inscricao");
                });

            modelBuilder.Entity("CRUDAPI.Models.Inscricao", b =>
                {
                    b.HasOne("CRUDAPI.Models.Categoria", "Categoria")
                        .WithMany("Inscricoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.Competidor", "Competidor")
                        .WithMany()
                        .HasForeignKey("CompetidorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.Competidor", null)
                        .WithMany("Inscricoes")
                        .HasForeignKey("CompetidorId1");

                    b.HasOne("Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRUDAPI.Models.Premio", "PremioResgatavel")
                        .WithMany()
                        .HasForeignKey("PremioResgatavelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Categoria");

                    b.Navigation("Competidor");

                    b.Navigation("Pagamento");

                    b.Navigation("PremioResgatavel");
                });

            modelBuilder.Entity("CRUDAPI.Models.Notificacao", b =>
                {
                    b.HasOne("CRUDAPI.Models.Usuario", "Notificado")
                        .WithMany("Notificacoes")
                        .HasForeignKey("NotificadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notificado");
                });

            modelBuilder.Entity("CRUDAPI.Models.Premio", b =>
                {
                    b.HasOne("Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("CRUDAPI.Models.Categoria", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competicao", b =>
                {
                    b.Navigation("Categorias");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competidor", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Confronto", b =>
                {
                    b.Navigation("ConfrontoInscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Inscricao", b =>
                {
                    b.Navigation("ConfrontoInscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Usuario", b =>
                {
                    b.Navigation("Competidores");

                    b.Navigation("Notificacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
